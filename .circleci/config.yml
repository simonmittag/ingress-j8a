version: 2.1

jobs:
  buildAndTest:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            go test -v ./...
  dockerize:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build application Docker image
          command: |
            docker build -t github.com/simonmittag/ingress-j8a .
  metrics:
    docker:
      - image: cimg/go:1.20 #
    environment:
      TEST_RESULTS: /tmp/test-results
      LOGLEVEL: TRACE
      LOGCOLOR: TRUE
      CC_TEST_REPORTER_ID: 8ea7863fb7ccdbc2ed7001ec9b0f788fe4ec663b97097dd20c74e1cc8eeaeca8
    steps:
      - checkout # check out source code to working directory
      - run:
          name: "Create a temp directory for artifacts"
          command: |
            mkdir -p /tmp/artifacts
      - run:
          name: "Create a temp directory for tests"
          command: |
            mkdir -p /tmp/test-results
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests with coverage report
          command: |
            export GIT_COMMITTED_AT="$(date +%s)"
            export CIRCLE_SHA="$CIRCLE_SHA1"
            export CIRCLE_BRANCH=`git rev-parse --abbrev-ref HEAD`
            ./cc-test-reporter before-build
            go test -cover -coverprofile=c.out ./...
            go tool cover -html=c.out -o coverage.html
            ./cc-test-reporter after-build --coverage-input-type gocov -p "github.com/simonmittag/ingress-j8a"
            mv coverage.html /tmp/artifacts

      - store_artifacts:
          path: /tmp/artifacts

      - run:
          name: Test Summary for CircleCI
          command: |
            gotestsum --junitfile /tmp/test-results/unit-tests.xml

      - store_test_results:
          path: /tmp/test-results

workflows:
  masterCI:
    jobs:
      - dockerize
      - buildAndTest
      - metrics
